{"ast":null,"code":"var _jsxFileName = \"/home/ritesh/React-js/second/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst message = \"Hiiiiiiii\";\nconst message1 = /*#__PURE__*/_jsxDEV(\"h2\", {\n  children: \"Helllooooooo\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 18\n}, this);\nconst arr = ['Apple', 'Orange', 'Apple', 'Banana', 'pineaplle', 'Apple'];\nconst app = arr.filter(fruit => fruit == 'Apple');\n// const appp = arr.find(fruitt => fruitt == 'Apple')\n\nconst countries = ['India', 'US', 'Japan'];\nfunction Demo() {\n  const display = () => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Demo!!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n    //     countries.forEach((country)=>{\n    //         return(\n    //           <div>\n    //               <p>{country}</p>\n    //           </div>\n    //         )\n    //     })\n  };\n\n  return (\n    //   <>\n    //   <h1>Hello ReactJS!!!</h1>\n    //   <p>React Demo!!!</p>\n    //   <p>Message : {message}</p>\n    //   {message1}\n    //   <ul>\n    //     {arr.map((fruit) => (\n    //       <li>{fruit}</li>\n    //     ))}\n    //   </ul>\n\n    // <h1>Using filter</h1>\n    //   <ol>\n    //     {app.map((fruit) => (\n    //       <li>{fruit}</li>\n    //     ))}\n    //   </ol>\n\n    {\n      display\n    }\n  );\n}\n_c = Demo;\nroot.render( /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","ReactDOM","App","root","createRoot","document","getElementById","message","message1","arr","app","filter","fruit","countries","Demo","display","render"],"sources":["/home/ritesh/React-js/second/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst message = \"Hiiiiiiii\"\nconst message1 = <h2>Helllooooooo</h2>\n\nconst arr = ['Apple', 'Orange', 'Apple', 'Banana', 'pineaplle', 'Apple']\nconst app = arr.filter(fruit => fruit == 'Apple')\n// const appp = arr.find(fruitt => fruitt == 'Apple')\n\nconst countries=['India','US','Japan']\n\n\nfunction Demo(){\n\n  const display=()=>{\n    return <h1>Demo!!!!</h1>\n //     countries.forEach((country)=>{\n //         return(\n //           <div>\n //               <p>{country}</p>\n //           </div>\n //         )\n //     })\n  }\n \n\n  return(\n  //   <>\n  //   <h1>Hello ReactJS!!!</h1>\n  //   <p>React Demo!!!</p>\n  //   <p>Message : {message}</p>\n  //   {message1}\n  //   <ul>\n  //     {arr.map((fruit) => (\n  //       <li>{fruit}</li>\n  //     ))}\n  //   </ul>\n\n  // <h1>Using filter</h1>\n  //   <ol>\n  //     {app.map((fruit) => (\n  //       <li>{fruit}</li>\n  //     ))}\n  //   </ol>\n     \n     {display}\n\n  )\n}\n\nroot.render(\n    <Demo/>\n);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC;AAExB,MAAMC,IAAI,GAAGF,QAAQ,CAACG,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,MAAMC,OAAO,GAAG,WAAW;AAC3B,MAAMC,QAAQ,gBAAG;EAAA,UAAI;AAAY;EAAA;EAAA;EAAA;AAAA,QAAK;AAEtC,MAAMC,GAAG,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC;AACxE,MAAMC,GAAG,GAAGD,GAAG,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,IAAI,OAAO,CAAC;AACjD;;AAEA,MAAMC,SAAS,GAAC,CAAC,OAAO,EAAC,IAAI,EAAC,OAAO,CAAC;AAGtC,SAASC,IAAI,GAAE;EAEb,MAAMC,OAAO,GAAC,MAAI;IAChB,oBAAO;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;EACC,CAAC;;EAGD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEG;MAACA;IAAO;EAAC;AAGd;AAAC,KApCQD,IAAI;AAsCbX,IAAI,CAACa,MAAM,eACP,QAAC,IAAI;EAAA;EAAA;EAAA;AAAA,QAAE,CACV;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}