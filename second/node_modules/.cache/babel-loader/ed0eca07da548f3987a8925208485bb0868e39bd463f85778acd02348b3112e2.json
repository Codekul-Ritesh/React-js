{"ast":null,"code":"var _jsxFileName = \"/home/ritesh/React-js/second/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst message = \"Hiiiiiiii\";\nconst message1 = /*#__PURE__*/_jsxDEV(\"h2\", {\n  children: \"Helllooooooo\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 18\n}, this);\nconst arr = ['Apple', 'Orange', 'Apple', 'Banana', 'pineaplle', 'Apple'];\nconst app = arr.filter(fruit => fruit == 'Apple');\n// const appp = arr.find(fruitt => fruitt == 'Apple')\n\nconst countries = ['India', 'US', 'Japan'];\nfunction Demo() {\n  const countries = ['India', 'US'];\n  const results = [];\n  if (countries.length > 0) {\n    countries.forEach((country, index) => {\n      results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: results.length > 0 ? results : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Data!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_c = Demo;\nroot.render( /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 5\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","ReactDOM","App","root","createRoot","document","getElementById","message","message1","arr","app","filter","fruit","countries","Demo","results","length","forEach","country","index","push","render"],"sources":["/home/ritesh/React-js/second/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst message = \"Hiiiiiiii\"\nconst message1 = <h2>Helllooooooo</h2>\n\nconst arr = ['Apple', 'Orange', 'Apple', 'Banana', 'pineaplle', 'Apple']\nconst app = arr.filter(fruit => fruit == 'Apple')\n// const appp = arr.find(fruitt => fruitt == 'Apple')\n\nconst countries=['India','US','Japan']\n\n\nfunction Demo(){\n \n  const countries=['India','US']\n\n  const results = [];\n  if(countries.length>0){\n    countries.forEach((country, index) => {\n      results.push(\n        <div key={index}>\n          <p>{country}</p>        \n        </div>,\n      );\n    });\n  }\n \n\n  return <div>{results.length>0 ? results : <p>No Data!!!</p> }</div>;\n}\n\nroot.render(\n    <Demo/>\n);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AAAC;AAExB,MAAMC,IAAI,GAAGF,QAAQ,CAACG,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,MAAMC,OAAO,GAAG,WAAW;AAC3B,MAAMC,QAAQ,gBAAG;EAAA,UAAI;AAAY;EAAA;EAAA;EAAA;AAAA,QAAK;AAEtC,MAAMC,GAAG,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC;AACxE,MAAMC,GAAG,GAAGD,GAAG,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,IAAI,OAAO,CAAC;AACjD;;AAEA,MAAMC,SAAS,GAAC,CAAC,OAAO,EAAC,IAAI,EAAC,OAAO,CAAC;AAGtC,SAASC,IAAI,GAAE;EAEb,MAAMD,SAAS,GAAC,CAAC,OAAO,EAAC,IAAI,CAAC;EAE9B,MAAME,OAAO,GAAG,EAAE;EAClB,IAAGF,SAAS,CAACG,MAAM,GAAC,CAAC,EAAC;IACpBH,SAAS,CAACI,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MACpCJ,OAAO,CAACK,IAAI,eACV;QAAA,uBACE;UAAA,UAAIF;QAAO;UAAA;UAAA;UAAA;QAAA;MAAK,GADRC,KAAK;QAAA;QAAA;QAAA;MAAA,QAET,CACP;IACH,CAAC,CAAC;EACJ;EAGA,oBAAO;IAAA,UAAMJ,OAAO,CAACC,MAAM,GAAC,CAAC,GAAGD,OAAO,gBAAG;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAQ;AACrE;AAAC,KAjBQD,IAAI;AAmBbX,IAAI,CAACkB,MAAM,eACP,QAAC,IAAI;EAAA;EAAA;EAAA;AAAA,QAAE,CACV;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}